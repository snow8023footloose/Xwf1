<template>
  <div class="tables">
    <el-tabs
      v-model="activeName"
      @tab-click="handleClick"
    >
      <el-tab-pane label="餐桌信息" name="first">
        <el-row :guter="0">
          <div class="table-container">
            <transition name="el-zoom-in-left"  v-for="(item,index) in listTable">
                <div v-show="show2" class="transition-box"  @click="selectTable(item,index)">
                  <div class="box-header">
                    <span class="left" style="float: left;margin-left: 7px">桌号：{{index+1}}</span>
                    <span class="right" style="float: right;margin-right: 7px">人数：{{item.score}}</span>
                  </div>
                    <!--总：{{item.recommend.length}}项-->


                  <div class="box-content">
                    <p v-for="(recommend,index) in item.recommend">{{index+1}}.{{recommend}}&nbsp;</p>
                  </div>
                </div>
            </transition>
          </div>
        </el-row>
      </el-tab-pane>
      <!--<el-tab-pane label="餐桌消费记录" name="third" @click="labelHideSroll">-->
        <!--<el-row :guter="0">-->
          <!--<div class="table-container">-->
            <!--<transition name="el-zoom-in-left">-->
              <!--<div v-show="show2" class="transition-box">餐桌1</div>-->
            <!--</transition>-->
          <!--</div>-->
        <!--</el-row>-->
      <!--</el-tab-pane>-->
    </el-tabs>
    <el-dialog :title="tableTitle" :model="form" :visible.sync="dialogFormVisibleTable" width="70%">
      <el-select v-model="value" placeholder="请选择类别，默认全部">
        <el-option
          v-for="item in options"
          :key="item.value"
          :label="item.label"
          :value="item.value">
        </el-option>
      </el-select>
      <el-select
        v-model="value9"
        multiple
        filterable
        remote
        label="搜索"
        reserve-keyword
        placeholder="可输入首字母搜索"
        :remote-method="remoteMethod"
        :loading="loading">
        <el-option
          v-for="item in options4"
          :key="item.value"
          :label="item.label"
          :value="item.value">
        </el-option>
      </el-select>
      <el-form :model="form">
        <el-form-item label="已点" :label-width="formLabelWidth">
          <div>
          <span v-for="item in form.type" v-model="form.type">
            {{item }}
            <!--<el-checkbox :label="item" name="type"></el-checkbox>-->
          </span>
          </div>
        </el-form-item>
      </el-form>
      <el-form :model="form">
        <el-form-item label="备注" :label-width="formLabelWidth">
          <el-input v-model="form.content" auto-complete="off" placeholder="请输入备注"></el-input>
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button size="large" type="danger" icon="el-icon-delete" @click="dialogFormVisibleTable = false">删除</el-button>
        <el-button @click="dialogFormVisibleTable = false">暂停服务</el-button>
        <el-button @click="dialogFormVisibleTable = false">取 消</el-button>
        <el-button type="primary" @click="dialogFormVisibleTable = false">确 定</el-button>
      </div>
    </el-dialog>
    <el-dialog title="增加餐桌" :visible.sync="dialogFormVisibleTablePlus">
      <el-form :model="form">
        <el-form-item label="名称" :label-width="formLabelWidth">
          <el-input v-model="form.content" auto-complete="off" placeholder="请输入备注"></el-input>
        </el-form-item>
      </el-form>
      <el-form :model="form">
        <el-form-item label="桌号" :label-width="formLabelWidth">
          <el-input v-model="form.tableNum" auto-complete="off" placeholder="请输入桌号"></el-input>
        </el-form-item>
      </el-form>
      <el-form :model="form">
        <el-form-item label="餐桌类型" :label-width="formLabelWidth" style="text-align: left">
          <el-select v-model="form.region" placeholder="请选择餐厅类型">
            <el-option label="包厢" value="shanghai"></el-option>
            <el-option label="大厅" value="beijing"></el-option>
            <el-option label="标准" value="beijing"></el-option>
            <el-option label="增加类型+" value="beijing"></el-option>
          </el-select>
        </el-form-item>
      </el-form>
      <el-form :model="form">
        <el-form-item label="容纳人数" :label-width="formLabelWidth">
          <el-input v-model="form.person" auto-complete="off" placeholder="请输入容纳人数"></el-input>
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button size="large" icon="el-icon-time">暂不开启</el-button>
        <el-button @click="dialogFormVisiblePrt = false">取 消</el-button>
        <el-button type="primary" @click="plusTable(el)">立即开启</el-button>
      </div>
    </el-dialog>
    <editcontrol @plusMethods="plusMethodsThis"></editcontrol>
    </div>
</template>

<script>
import editcontrol from '@/components/editcontrol/editcontrol';
const ERR_OK = 0
export default {
  name: 'tables',
  data: () => ({
    show2: false,
    activeName: 'first',
    dialogFormVisibleTable: false,
    dialogFormVisibleTablePlus: false,
    listTable:[],
    goodsTable:[],
    currentDate: new Date(),
    formLabelWidth:'80px',
    tableTitle:"",
    form: {
      name: '',
      region: '',
      date1: '',
      date2: '',
      delivery: false,
      type: [],
      resource: '',
      desc: '',
      content:'',
      tableNum:'',
      person:''
    },
    options4: [],
    value9: [],
    list: [],
    loading: false,
    states: ["Alabama", "Alaska", "Arizona",
      "Arkansas", "California", "Colorado",
      "Connecticut", "Delaware", "Florida",
      "Georgia", "Hawaii", "Idaho", "Illinois",
      "Indiana", "Iowa", "Kansas", "Kentucky",
      "Louisiana", "Maine", "Maryland",
      "Massachusetts", "Michigan", "Minnesota",
      "Mississippi", "Missouri", "Montana",
      "Nebraska", "Nevada", "New Hampshire",
      "New Jersey", "New Mexico", "New York",
      "North Carolina", "North Dakota", "Ohio",
      "Oklahoma", "Oregon", "Pennsylvania",
      "Rhode Island", "South Carolina",
      "South Dakota", "Tennessee", "Texas",
      "Utah", "Vermont", "Virginia",
      "Washington", "West Virginia", "Wisconsin",
      "Wyoming"],
    options: [{
        value: '选项1',
        label: '黄金糕'
      }, {
        value: '选项2',
        label: '双皮奶'
      }, {
        value: '选项3',
        label: '蚵仔煎'
      }, {
        value: '选项4',
        label: '龙须面'
      }, {
        value: '选项5',
        label: '北京烤鸭'
      }],
    value: ''

  }),
  methods: {
    remoteMethod(query) {
      if (query !== '') {
        this.loading = true;
        setTimeout(() => {
          this.loading = false;
          this.options4 = this.list.filter(item => {
            return item.label.toLowerCase()
              .indexOf(query.toLowerCase()) > -1;
          });
        }, 200);
      } else {
        this.options4 = [];
      }
    },
    plusTable(el){
      this.dialogFormVisible =!this.dialogFormVisible
    },
    plusMethodsThis(data){
      this.dialogFormVisibleTablePlus = !this.dialogFormVisibleTablePlus;
    },
    selectTable(item,index){
      this.dialogFormVisibleTable = !this.dialogFormVisibleTable
      console.log(item);
      this.form.name = item.score
      this.form.type = item.recommend
      var Title = new Array("桌号"+(index+1),"人数:"+item.score)
      this.tableTitle = Title.join('——')
    },
    handleClick(tab, event) {
    },
    labelHideSroll(){
    },
    openMsg(msg){
      const h = this.$createElement;
      this.$msgbox({
        title: '结账',
        message: h('p', null, [
          h('span', null, '内容可以是 '),
          h('el-button', { style: 'color: teal' }, 'VNode')
        ]),
        showCancelButton: true,
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        beforeClose: (action, instance, done) => {
          if (action === 'confirm') {
            instance.confirmButtonLoading = true;
            instance.confirmButtonText = '结账中...';
            setTimeout(() => {
              done();
              setTimeout(() => {
                instance.confirmButtonLoading = false;
              }, 300);
            }, 3000);
          } else {
            done();
          }
        }
      }).then(action => {
        this.$message({
          type: 'info',
          message: 'action: ' + action
        });
      });
      // this.$alert(
      //   '<el-row>\n' +
      //   '  <el-col :span="8" v-for="(o, index) in 2" :key="o" :offset="index > 0 ? 2 : 0">\n' +
      //   '    <el-card :body-style="{ padding: \'0px\' }">\n' +
      //   '      <div style="padding: 14px;">\n' +
      //   '        <span>好吃的汉堡</span>\n' +
      //   '        <div class="bottom clearfix">\n' +
      //   '          <time class="time">' +
      //                 this.currentDate+
      //               '</time>\n' +
      //   '          <el-button type="text" class="button">操作按钮</el-button>\n' +
      //   '        </div>\n' +
      //   '      </div>\n' +
      //   '    </el-card>\n' +
      //   '  </el-col>\n' +
      //   '</el-row>',
      //   '确认结账', {
      //   dangerouslyUseHTMLString: true
      // });
    }
  },
  mounted() {
    setTimeout(this.show2 = !this.show2,2000);
    this.list = this.states.map(item => {
      return { value: item, label: item };
    });
  },
  created() {
    this.$axios.get('../api/ratings').then((response) => {
      var response = response.data
      if (response.errno === ERR_OK) {
        this.listTable = response.data
      }
    })
    this.$axios.get('../api/goods').then((res) => {
      var res = res.data
      if (res.errno === ERR_OK) {
        this.goodsTable = res.data
        console.log(this.goodsTable);
      }
    })
  },
  components:{
    editcontrol
  }
}
</script>

<!-- Add "scoped" attribute to limit CSS to this component only -->
<style scoped lang="stylus" rel="stylesheet/stylus">
  .tables
    margin:0 3% 0
    .el-row
      .table-container
        display: flex
        height: 720px
        flex-wrap: wrap
        .transition-box
          margin-bottom: 10px
          width: 10em
          height: 10em
          border-radius: 4px
          background-color: #d4d4d4
          color: white
          text-align: center
          box-sizing: border-box
          margin-right: 20px
          overflow hidden
          position relative
          z-index 101
          .box-header
            width 100%
            height 15%
            display block
            background #409EFF
          .box-content
            overflow-y scroll
            height 77%
            width 95%
            text-align left
            padding-left 5%
            p
              margin 10px 0px


            /*.right*/
              /*width 50%*/
              /*height auto*/
              /*background #409EFF*/
              /*position relative*/
              /*top 0*/
              /*right 0*/
              /*z-index 100*/


  .time
    font-size: 13px
    color: #999


  .bottom
    margin-top: 13px
    line-height: 12px


  .button
    padding: 0
    float: right


  .image
    width: 100%
    display: block


  .clearfix:before,.clearfix:after
    display: table
    content: ""


  .clearfix:after
    clear: both

</style>
